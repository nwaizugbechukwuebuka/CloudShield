apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudshield-api
  labels:
    app: cloudshield
    component: api
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudshield
      component: api
  template:
    metadata:
      labels:
        app: cloudshield
        component: api
    spec:
      containers:
      - name: cloudshield-api
        image: cloudshield/api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: secret-key
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: google-client-secret
        - name: MICROSOFT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: microsoft-client-id
        - name: MICROSOFT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: microsoft-client-secret
        - name: SLACK_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: slack-client-id
        - name: SLACK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: slack-client-secret
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: github-client-secret
        - name: NOTION_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: notion-client-id
        - name: NOTION_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: notion-client-secret
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudshield-frontend
  labels:
    app: cloudshield
    component: frontend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudshield
      component: frontend
  template:
    metadata:
      labels:
        app: cloudshield
        component: frontend
    spec:
      containers:
      - name: cloudshield-frontend
        image: cloudshield/frontend:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudshield-worker
  labels:
    app: cloudshield
    component: worker
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudshield
      component: worker
  template:
    metadata:
      labels:
        app: cloudshield
        component: worker
    spec:
      containers:
      - name: cloudshield-worker
        image: cloudshield/api:latest
        command: ["celery", "-A", "tasks.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: secret-key
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: google-client-secret
        - name: MICROSOFT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: microsoft-client-id
        - name: MICROSOFT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: microsoft-client-secret
        - name: SLACK_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: slack-client-id
        - name: SLACK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: slack-client-secret
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: cloudshield-secrets
              key: slack-webhook-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: cloudshield
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudshield
      component: database
  template:
    metadata:
      labels:
        app: cloudshield
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: cloudshield
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: cloudshield
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudshield
      component: cache
  template:
    metadata:
      labels:
        app: cloudshield
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
